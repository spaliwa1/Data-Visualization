<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook original-version='18.1' source-build='2019.1.3 (20191.19.0417.1429)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (iplallseasons_refined)' inline='true' name='federated.0dweeea0twlvym19lkdr11q2rej7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='iplallseasons_refined' name='excel-direct.139jroz1x77xyp173srzn1fn17rm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Data Science/MachineHack/IPL Data Visualization/iplallseasons_refined.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.139jroz1x77xyp173srzn1fn17rm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:L705:no:A1:L705:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MMM dd, yyyy' name='Match_date' ordinal='0' />
            <column datatype='string' name='Match_number' ordinal='1' />
            <column datatype='string' name='Match_venue' ordinal='2' />
            <column datatype='string' name='Match_time' ordinal='3' />
            <column datatype='string' name='Toss_winner' ordinal='4' />
            <column datatype='string' name='Toss_decision' ordinal='5' />
            <column datatype='string' name='Team1' ordinal='6' />
            <column datatype='string' name='Team1_score' ordinal='7' />
            <column datatype='string' name='Team2' ordinal='8' />
            <column datatype='string' name='Team2_score' ordinal='9' />
            <column datatype='string' name='Winning_team' ordinal='10' />
            <column datatype='string' name='Winning_margin' ordinal='11' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L705:no:A1:L705:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Match_date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Match_date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match_number</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Match_number]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Match_number</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match_venue</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Match_venue]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Match_venue</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Match_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Match_time]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Match_time</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Toss_winner</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Toss_winner]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Toss_winner</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Toss_decision</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Toss_decision]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Toss_decision</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team1</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Team1</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team1_score</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team1_score]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Team1_score</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team2</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Team2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team2_score</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team2_score]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Team2_score</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winning_team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Winning_team]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Winning_team</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Winning_margin</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Winning_margin]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Winning_margin</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579193311233:qk]&quot;' value='Yes' />
          <alias key='&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:MatchWon-Toss Won (copy):qk]&quot;' value='No' />
        </aliases>
      </column>
      <column caption='Bowl' datatype='integer' name='[Bat (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Toss_decision]=&quot;bat&quot; AND CONTAINS([Winning_margin],&quot;wicket&quot;))THEN( {FIXED [Winning_team]:SUM([Number of Records])}) END' />
      </column>
      <column caption='Total Matches' datatype='integer' name='[Calculation_149463268170096646]' role='measure' type='quantitative' visual-totals='Avg'>
        <calculation class='tableau' formula='Sum([Number of Records])' />
      </column>
      <column caption='Winning Percentage' datatype='integer' default-format='N' name='[Calculation_320318579163938816]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Winning_team]:SUM([Number of Records])}' />
      </column>
      <column caption='MatchWon-Toss Won' datatype='integer' name='[Calculation_320318579193311233]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Toss_winner]=[Winning_team])THEN {FIXED [Winning_team]:SUM([Number of Records])}END' />
      </column>
      <column caption='Bat' datatype='integer' name='[Calculation_320318579203280900]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF ([Toss_decision]=&quot;bat&quot; AND CONTAINS([Winning_margin],&quot;run&quot;))THEN( {FIXED [Winning_team]:SUM([Number of Records])}) END' />
      </column>
      <column aggregation='None' datatype='integer' name='[MatchWon-Toss Won (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Calculation_320318579193311233]' peg='0' size='12.11' />
      </column>
      <column caption='MatchLost-Toss Won' datatype='integer' name='[MatchWon-Toss Won (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF (NOT [Toss_winner]=[Winning_team])THEN {FIXED [Winning_team]:SUM([Number of Records])}END' />
      </column>
      <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
      <column caption='Match number' datatype='string' name='[Match_number]' role='dimension' type='nominal' />
      <column caption='Match time' datatype='string' name='[Match_time]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[Match_venue - Split 3]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.0dweeea0twlvym19lkdr11q2rej7].[Match_venue]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Match_venue], &quot;,&quot;, -1 ) )' />
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
          <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
          <semantic-value key='&quot;Indore&quot;' value='22.7196' />
          <semantic-value key='&quot;Johannesburg&quot;' value='26.2041' />
          <semantic-value key='&quot;Kimberley&quot;' value='49.665199999999999' />
          <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
          <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
          <semantic-value key='&quot;Sharjah Cricket Stadium&quot;' value='25.3309' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
          <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
          <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
          <semantic-value key='&quot;Johannesburg&quot;' value='28.0473' />
          <semantic-value key='&quot;Kimberley&quot;' value='115.9967' />
          <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
          <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
          <semantic-value key='&quot;Sharjah Cricket Stadium&quot;' value='55.420900000000003' />
        </semantic-values>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Dubai International Cricket Stadium&quot;' value='&quot;Dubai&quot;' />
        </semantic-values>
      </column>
      <column caption='Match venue' datatype='string' name='[Match_venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Team1 score' datatype='string' name='[Team1_score]' role='dimension' type='nominal' />
      <column caption='Team2 score' datatype='string' name='[Team2_score]' role='dimension' type='nominal' />
      <column caption='Toss decision' datatype='string' name='[Toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss winner' datatype='string' name='[Toss_winner]' role='dimension' type='nominal' />
      <column caption='Winning margin' datatype='string' name='[Winning_margin]' role='dimension' type='nominal' />
      <column caption='Winning team' datatype='string' name='[Winning_team]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_320318579193311233]' derivation='Count' name='[cnt:Calculation_320318579193311233:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MatchWon-Toss Won (copy)]' derivation='Count' name='[cnt:MatchWon-Toss Won (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Match_venue - Split 3]' derivation='None' name='[none:Match_venue - Split 3:nk]' pivot='key' type='nominal' />
      <column-instance column='[Toss_decision]' derivation='None' name='[none:Toss_decision:nk]' pivot='key' type='nominal' />
      <column-instance column='[Toss_winner]' derivation='None' name='[none:Toss_winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[Winning_team]' derivation='None' name='[none:Winning_team:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_320318579193311233]' derivation='Sum' name='[sum:Calculation_320318579193311233:qk]' pivot='key' type='quantitative' />
      <column-instance column='[MatchWon-Toss Won (copy)]' derivation='Sum' name='[sum:MatchWon-Toss Won (copy):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[usr:Calculation_149463268170096646:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[usr:Calculation_149463268170096646:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.652174' measure-ordering='alphabetic' measure-percentage='0.347826' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Winning_team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Match tied (Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Match tied (Mumbai Indians&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Match abandoned without a ball bowled&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;No result&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Match tied (Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Match tied (Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Match tied (Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;No result (abandoned with a toss)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Match_date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2016</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2008</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2012</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2017</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2013</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2009</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2014</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2018</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2015</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2010</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2028</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2011</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Toss_winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;no toss&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:MatchWon-Toss Won (copy):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[sum:Calculation_320318579193311233:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[sum:MatchWon-Toss Won (copy):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dweeea0twlvym19lkdr11q2rej7]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579193311233:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Toss_decision:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;no&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;field&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Match_venue - Split 3:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajkot&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Abu Dhabi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kimberley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloemfontein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nagpur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dubai International Cricket Stadium&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuttack&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ranchi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cape Town&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Elizabeth&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Johannesburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ahmedabad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Centurion&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Durban&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East London&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jaipur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kanpur&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sharjah Cricket Stadium&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Raipur&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bangalore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolkata&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hyderabad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dharamsala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visakhapatnam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mumbai&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='BatFirst vs Bowl First'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='Bowl' datatype='integer' name='[Bat (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Toss_decision]=&quot;bat&quot; AND CONTAINS([Winning_margin],&quot;wicket&quot;))THEN( {FIXED [Winning_team]:SUM([Number of Records])}) END' />
            </column>
            <column caption='Bat' datatype='integer' name='[Calculation_320318579203280900]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Toss_decision]=&quot;bat&quot; AND CONTAINS([Winning_margin],&quot;run&quot;))THEN( {FIXED [Winning_team]:SUM([Number of Records])}) END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Toss decision' datatype='string' name='[Toss_decision]' role='dimension' type='nominal' />
            <column caption='Winning margin' datatype='string' name='[Winning_margin]' role='dimension' type='nominal' />
            <column caption='Winning team' datatype='string' name='[Winning_team]' role='dimension' type='nominal' />
            <column-instance column='[Bat (copy)]' derivation='Count' name='[cnt:Bat (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_320318579203280900]' derivation='Count' name='[cnt:Calculation_320318579203280900:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Toss_decision]' derivation='None' name='[none:Toss_decision:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Toss_decision:nk]' member='&quot;bat&quot;' />
              <groupfilter function='member' level='[none:Toss_decision:nk]' member='&quot;field&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579203280900:qk]' scope='rows' value='Bat First' />
            <format attr='title' class='0' field='[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Bat (copy):qk]' scope='rows' value='Bowl First' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579203280900:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Bat (copy):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579203280900:qk] + [federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Bat (copy):qk])</rows>
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579203280900:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Bat (copy):qk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579203280900:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>148</value>
                <value>131</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Bat (copy):qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Bat (copy):qk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579203280900:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>148</value>
                <value>131</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{3F4BD3FC-A4D7-4D98-B3BC-11E39383255E}' />
    </worksheet>
    <worksheet name='Does Winning Toss Impact Match Result?'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='MatchWon-Toss Won' datatype='integer' name='[Calculation_320318579193311233]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF ([Toss_winner]=[Winning_team])THEN {FIXED [Winning_team]:SUM([Number of Records])}END' />
            </column>
            <column caption='MatchLost-Toss Won' datatype='integer' name='[MatchWon-Toss Won (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF (NOT [Toss_winner]=[Winning_team])THEN {FIXED [Winning_team]:SUM([Number of Records])}END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Toss winner' datatype='string' name='[Toss_winner]' role='dimension' type='nominal' />
            <column caption='Winning team' datatype='string' name='[Winning_team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_320318579193311233]' derivation='Count' name='[cnt:Calculation_320318579193311233:qk]' pivot='key' type='quantitative' />
            <column-instance column='[MatchWon-Toss Won (copy)]' derivation='Count' name='[cnt:MatchWon-Toss Won (copy):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Toss_winner]' derivation='None' name='[none:Toss_winner:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:MatchWon-Toss Won (copy):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579193311233:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_winner:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Chennai Super Kings&quot;' function='range' level='[none:Toss_winner:nk]' to='&quot;Mumbai Indians&quot;' />
              <groupfilter from='&quot;Pune Warriors&quot;' function='range' level='[none:Toss_winner:nk]' to='&quot;Sunrisers Hyderabad&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_winner:nk]</column>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:MatchWon-Toss Won (copy):qk]' />
              <text column='[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Calculation_320318579193311233:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]</rows>
        <cols>[federated.0dweeea0twlvym19lkdr11q2rej7].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{CB3D4C7C-665A-4C5C-8AC2-60CA309D432B}' />
    </worksheet>
    <worksheet name='IPL Champions(2008-2018)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
            <column caption='Match number' datatype='string' name='[Match_number]' role='dimension' type='nominal' />
            <column caption='Winning team' datatype='string' name='[Winning_team]' role='dimension' type='nominal' />
            <column-instance column='[Winning_team]' derivation='Count' name='[cnt:Winning_team:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Match_number]' derivation='None' name='[none:Match_number:nk]' pivot='key' type='nominal' />
            <column-instance column='[Winning_team]' derivation='None' name='[none:Winning_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_number:nk]'>
            <groupfilter function='member' level='[none:Match_number:nk]' member='&quot;Final&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]'>
            <groupfilter from='2008' function='range' level='[yr:Match_date:ok]' to='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Winning_team:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</column>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_number:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Winning_team:qk]' scope='cols' value='Number of times Team Won' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</rows>
        <cols>[federated.0dweeea0twlvym19lkdr11q2rej7].[cnt:Winning_team:qk]</cols>
      </table>
      <simple-id uuid='{7FCC0AEB-B939-4DD0-85DA-0A9269582BCD}' />
    </worksheet>
    <worksheet name='IPL Matches by Venue Per Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='Total Matches' datatype='integer' name='[Calculation_149463268170096646]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='Sum([Number of Records])' />
            </column>
            <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
            <column caption='City' datatype='string' name='[Match_venue - Split 3]' role='dimension' semantic-role='[City].[Name]' type='nominal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.0dweeea0twlvym19lkdr11q2rej7].[Match_venue]'>
              <calculation class='tableau' formula='TRIM( SPLIT( [Match_venue], &quot;,&quot;, -1 ) )' />
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Delhi&quot;' value='28.7041' />
                <semantic-value key='&quot;Hyderabad&quot;' value='17.385000000000002' />
                <semantic-value key='&quot;Indore&quot;' value='22.7196' />
                <semantic-value key='&quot;Johannesburg&quot;' value='26.2041' />
                <semantic-value key='&quot;Kimberley&quot;' value='49.665199999999999' />
                <semantic-value key='&quot;Kochi&quot;' value='9.9312000000000005' />
                <semantic-value key='&quot;Raipur&quot;' value='21.2514' />
                <semantic-value key='&quot;Sharjah Cricket Stadium&quot;' value='25.3309' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Delhi&quot;' value='77.102500000000006' />
                <semantic-value key='&quot;Hyderabad&quot;' value='78.486699999999999' />
                <semantic-value key='&quot;Indore&quot;' value='75.857699999999994' />
                <semantic-value key='&quot;Johannesburg&quot;' value='28.0473' />
                <semantic-value key='&quot;Kimberley&quot;' value='115.9967' />
                <semantic-value key='&quot;Kochi&quot;' value='76.267300000000006' />
                <semantic-value key='&quot;Raipur&quot;' value='81.629599999999996' />
                <semantic-value key='&quot;Sharjah Cricket Stadium&quot;' value='55.420900000000003' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Dubai International Cricket Stadium&quot;' value='&quot;Dubai&quot;' />
              </semantic-values>
            </column>
            <column caption='Match venue' datatype='string' name='[Match_venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Match_venue - Split 3]' derivation='None' name='[none:Match_venue - Split 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[usr:Calculation_149463268170096646:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]'>
            <groupfilter function='member' level='[yr:Match_date:ok]' member='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]' />
              <text column='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#1b1b1b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</rows>
        <cols>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Jaipur&quot;</value>
                <value>7.0</value>
                <value>26.916699999999999</value>
                <value>75.866699999999994</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Kolkata&quot;</value>
                <value>7.0</value>
                <value>22.5411</value>
                <value>88.337800000000001</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Mumbai&quot;</value>
                <value>10.0</value>
                <value>18.966699999999999</value>
                <value>72.833299999999994</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Chandigarh&quot;</value>
                <value>7.0</value>
                <value>30.735299999999999</value>
                <value>76.7911</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Latitude (generated)]</field>
                  <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Delhi&quot;</value>
                <value>7.0</value>
                <value>28.7041</value>
                <value>77.102500000000006</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{7C50F9AB-FAA5-4CF8-A061-62901A33A876}' />
    </worksheet>
    <worksheet name='Matches By Venue Per Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='Total Matches' datatype='integer' name='[Calculation_149463268170096646]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='Sum([Number of Records])' />
            </column>
            <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
            <column caption='Match venue' datatype='string' name='[Match_venue]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Match_venue]' derivation='None' name='[none:Match_venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[usr:Calculation_149463268170096646:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]'>
            <groupfilter function='member' level='[yr:Match_date:ok]' member='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:qk]' />
              <color column='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:qk]' />
              <text column='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue:nk]' />
              <text column='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6DD49EDA-19A1-43F6-8DBA-B226709C2D25}' />
    </worksheet>
    <worksheet name='Matches Per Season'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='Total Matches' datatype='integer' name='[Calculation_149463268170096646]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='Sum([Number of Records])' />
            </column>
            <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Match_date]' derivation='Year-Trunc' name='[tyr:Match_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[usr:Calculation_149463268170096646:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[usr:Calculation_149463268170096646:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]'>
            <groupfilter from='2008' function='range' level='[yr:Match_date:ok]' to='2018' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0dweeea0twlvym19lkdr11q2rej7].[tyr:Match_date:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='data-highlighter'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-style' value='dotted' />
            <format attr='border-color' value='#b6992d' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:qk] + [federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk])</rows>
        <cols>[federated.0dweeea0twlvym19lkdr11q2rej7].[tyr:Match_date:qk]</cols>
      </table>
      <simple-id uuid='{6E7FE1EB-5E95-4768-9B22-0F22EE677518}' />
    </worksheet>
    <worksheet name='Matches Won By Teams Each Season'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Winning team' datatype='string' name='[Winning_team]' role='dimension' type='nominal' />
            <column-instance column='[Winning_team]' derivation='None' name='[none:Winning_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]'>
            <groupfilter function='member' level='[yr:Match_date:ok]' member='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dweeea0twlvym19lkdr11q2rej7].[sum:Number of Records:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{93F8F945-48E7-47E9-A5C0-BD358F746E4D}' />
    </worksheet>
    <worksheet name='Toss Decision By Teams'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='Total Matches' datatype='integer' name='[Calculation_149463268170096646]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='Sum([Number of Records])' />
            </column>
            <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Toss decision' datatype='string' name='[Toss_decision]' role='dimension' type='nominal' />
            <column caption='Toss winner' datatype='string' name='[Toss_winner]' role='dimension' type='nominal' />
            <column-instance column='[Toss_decision]' derivation='None' name='[none:Toss_decision:nk]' pivot='key' type='nominal' />
            <column-instance column='[Toss_winner]' derivation='None' name='[none:Toss_winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[usr:Calculation_149463268170096646:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
            <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Toss_decision:nk]' member='&quot;bat&quot;' />
              <groupfilter function='member' level='[none:Toss_decision:nk]' member='&quot;field&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]'>
            <groupfilter function='member' level='[yr:Match_date:ok]' member='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</column>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='pane'>
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]' />
              <text column='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_winner:nk] / [federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk])</rows>
        <cols>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</cols>
      </table>
      <simple-id uuid='{8AD02258-F899-413F-A9B9-9AAA6AC94DD6}' />
    </worksheet>
    <worksheet name='Winnning Percentage of Each Team'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
          </datasources>
          <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
            <column caption='Total Matches' datatype='integer' name='[Calculation_149463268170096646]' role='measure' type='quantitative' visual-totals='Avg'>
              <calculation class='tableau' formula='Sum([Number of Records])' />
            </column>
            <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='ordinal' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Winning team' datatype='string' name='[Winning_team]' role='dimension' type='nominal' />
            <column-instance column='[Winning_team]' derivation='None' name='[none:Winning_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[pcto:usr:Calculation_149463268170096646:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Calculation_149463268170096646]' derivation='User' name='[pcto:usr:Calculation_149463268170096646:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' type='PctTotal' />
            </column-instance>
            <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[pcto:usr:Calculation_149463268170096646:qk:1]' included-values='in-range'>
            <min>0.02</min>
            <max>0.22033898305084745</max>
          </filter>
          <filter class='categorical' column='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]'>
            <groupfilter function='member' level='[yr:Match_date:ok]' member='2008' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</column>
            <column>[federated.0dweeea0twlvym19lkdr11q2rej7].[pcto:usr:Calculation_149463268170096646:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dweeea0twlvym19lkdr11q2rej7].[pcto:usr:Calculation_149463268170096646:qk:1]' scope='cols' value='% of Total Matches' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0dweeea0twlvym19lkdr11q2rej7].[pcto:usr:Calculation_149463268170096646:qk:1]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dweeea0twlvym19lkdr11q2rej7].[pcto:usr:Calculation_149463268170096646:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</rows>
        <cols>[federated.0dweeea0twlvym19lkdr11q2rej7].[pcto:usr:Calculation_149463268170096646:qk:1]</cols>
      </table>
      <simple-id uuid='{8D4AE3F0-B737-47D4-8EF7-23F7801053AD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='IPL Data Visualization'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#00000000' />
        </style-rule>
      </style>
      <size maxheight='1268' maxwidth='2566' minheight='1268' minwidth='2566' preset-index='17' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (iplallseasons_refined)' name='federated.0dweeea0twlvym19lkdr11q2rej7' />
      </datasources>
      <datasource-dependencies datasource='federated.0dweeea0twlvym19lkdr11q2rej7'>
        <column caption='Match date' datatype='date' name='[Match_date]' role='dimension' type='ordinal' />
        <column-instance column='[Match_date]' derivation='Year' name='[yr:Match_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='10250' id='3' is-centered='0' is-scaled='1' param='D:/Data Science/MachineHack/IPL-logo.jpg' type='bitmap' w='11800' x='3300' y='4125' />
        <zone h='31510' id='4' name='IPL Champions(2008-2018)' w='45242' x='18521' y='4427' />
        <zone h='5500' id='5' mode='checkdropdown' name='IPL Champions(2008-2018)' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='16000' x='47500' y='5125' />
        <zone h='46625' id='8' name='IPL Matches by Venue Per Year' w='33300' x='1000' y='31125' />
        <zone h='5500' id='9' mode='checkdropdown' name='IPL Matches by Venue Per Year' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='16000' x='34700' y='34125' />
        <zone h='23568' id='10' name='IPL Matches by Venue Per Year' pane-specification-id='0' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]' type='color' w='7833' x='34700' y='39974' />
        <zone h='35000' id='11' name='Matches Per Season' w='56100' x='43500' y='39125' />
        <zone h='5500' id='12' mode='checkdropdown' name='Matches Per Season' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='16000' x='64100' y='34000' />
        <zone h='7250' id='13' name='Matches Per Season' pane-specification-id='1' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]' type='color' w='14000' x='82100' y='35375' />
        <zone h='24219' id='14' name='Toss Decision By Teams' w='64788' x='220' y='76302' />
        <zone h='5469' id='15' mode='checkdropdown' name='Toss Decision By Teams' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='15959' x='32504' y='78385' />
        <zone h='7161' id='16' name='Toss Decision By Teams' pane-specification-id='0' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]' type='color' w='13982' x='49634' y='76563' />
        <zone h='25521' id='17' name='Winnning Percentage of Each Team' w='36310' x='63543' y='4036' />
        <zone h='5729' id='18' mode='checkdropdown' name='Winnning Percentage of Each Team' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='11713' x='87994' y='4688' />
        <zone h='25000' id='19' name='Does Winning Toss Impact Match Result?' w='27745' x='65447' y='74870' />
        <zone forceUpdate='true' h='3943' id='20' type='text' w='13913' x='84684' y='74132'>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b'>It&apos;s clear team winning the toss has slight advantage.</run>
          </formatted-text>
        </zone>
        <zone h='13486' id='21' name='BatFirst vs Bowl First' w='27747' x='66991' y='85883' />
        <zone forceUpdate='true' h='2366' id='22' type='text' w='14770' x='81333' y='86120'>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b'>It&apos;s ovious captains have preferred to chase after winning the toss</run>
          </formatted-text>
        </zone>
        <zone h='13880' id='23' is-centered='0' is-scaled='1' param='D:/Data Science/MachineHack/IPL Trophy.jpeg' type='bitmap' w='12510' x='2728' y='15379' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2750' minheight='2750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98738' id='29' param='vert' type='layout-flow' w='99376' x='312' y='631'>
                <zone h='5729' id='18' mode='checkdropdown' name='Winnning Percentage of Each Team' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='11713' x='87994' y='4688'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='25521' id='17' is-fixed='true' name='Winnning Percentage of Each Team' w='36310' x='63543' y='4036'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='130' h='10250' id='3' is-centered='0' is-fixed='true' is-scaled='1' param='D:/Data Science/MachineHack/IPL-logo.jpg' type='bitmap' w='11800' x='3300' y='4125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='5' mode='checkdropdown' name='IPL Champions(2008-2018)' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='16000' x='47500' y='5125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='31510' id='4' is-fixed='true' name='IPL Champions(2008-2018)' w='45242' x='18521' y='4427'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='176' h='13880' id='23' is-centered='0' is-fixed='true' is-scaled='1' param='D:/Data Science/MachineHack/IPL Trophy.jpeg' type='bitmap' w='12510' x='2728' y='15379'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='9' mode='checkdropdown' name='IPL Matches by Venue Per Year' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='16000' x='34700' y='34125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46625' id='8' is-fixed='true' name='IPL Matches by Venue Per Year' w='33300' x='1000' y='31125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23568' id='10' name='IPL Matches by Venue Per Year' pane-specification-id='0' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]' type='color' w='7833' x='34700' y='39974'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5500' id='12' mode='checkdropdown' name='Matches Per Season' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='16000' x='64100' y='34000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35000' id='11' is-fixed='true' name='Matches Per Season' w='56100' x='43500' y='39125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='13' name='Matches Per Season' pane-specification-id='1' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]' type='color' w='14000' x='82100' y='35375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3943' id='20' type='text' w='13913' x='84684' y='74132'>
                  <formatted-text>
                    <run bold='true' fontcolor='#f28e2b'>It&apos;s clear team winning the toss has slight advantage.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='25000' id='19' is-fixed='true' name='Does Winning Toss Impact Match Result?' w='27745' x='65447' y='74870'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5469' id='15' mode='checkdropdown' name='Toss Decision By Teams' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' w='15959' x='32504' y='78385'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24219' id='14' is-fixed='true' name='Toss Decision By Teams' w='64788' x='220' y='76302'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7161' id='16' name='Toss Decision By Teams' pane-specification-id='0' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]' type='color' w='13982' x='49634' y='76563'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='171' h='13486' id='21' is-fixed='true' name='BatFirst vs Bowl First' w='27747' x='66991' y='85883'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2366' id='22' type='text' w='14770' x='81333' y='86120'>
                  <formatted-text>
                    <run bold='true' fontcolor='#f28e2b'>It&apos;s ovious captains have preferred to chase after winning the toss</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CE3405F1-483D-49BF-95B8-64DDBC418D64}' />
    </dashboard>
  </dashboards>
  <windows show-side-pane='false' source-height='30'>
    <window class='worksheet' name='Matches By Venue Per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8C84D744-23AC-42E6-AD1B-B8817C75C2B5}' />
    </window>
    <window class='worksheet' name='Matches Won By Teams Each Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_date:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Number of Records:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Team1:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Team1_score:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Team2:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Team2_score:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_winner:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning team (copy):nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[sum:Number of Records:ok]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[sum:Number of Records:qk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Number of Records:ok]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EBF7D35F-D238-4A98-93C5-C25D5BAC1CC6}' />
    </window>
    <window class='worksheet' name='Matches Per Season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0dweeea0twlvym19lkdr11q2rej7].[tyr:Match_date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[mn:Match_date:ok]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_date:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_number:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C13A20D4-F99F-4547-A6E4-B1599ADD4198}' />
    </window>
    <window class='worksheet' name='Winnning Percentage of Each Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0dweeea0twlvym19lkdr11q2rej7].[pcto:usr:Calculation_149463268170096646:qk:1]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_number:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[pcto:usr:Calculation_149463268170096646:qk:1]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B4F00AA-3DD4-4304-9F79-FBF79BA9E2B2}' />
    </window>
    <window class='worksheet' name='Toss Decision By Teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1465FD54-F0C4-4AF2-B99E-DD998F823B5D}' />
    </window>
    <window class='worksheet' name='Does Winning Toss Impact Match Result?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_winner:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[sum:Calculation_320318579193311233:qk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E02D898C-8034-46BE-A9EC-E93D06C5A742}' />
    </window>
    <window class='worksheet' name='IPL Champions(2008-2018)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_number:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B645921-6301-43A1-9F57-55271FFBD0ED}' />
    </window>
    <window class='worksheet' name='BatFirst vs Bowl First'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Winning_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66B4C1D5-5A36-48F7-9789-648696AFBB1F}' />
    </window>
    <window class='worksheet' name='IPL Matches by Venue Per Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 2:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue:nk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</field>
            <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[yr:Match_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B183A2C-D398-415B-A140-A7871FCFBB20}' />
    </window>
    <window class='dashboard' maximized='true' name='IPL Data Visualization'>
      <viewpoints>
        <viewpoint name='BatFirst vs Bowl First'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Does Winning Toss Impact Match Result?' />
        <viewpoint name='IPL Champions(2008-2018)' />
        <viewpoint name='IPL Matches by Venue Per Year'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Match_venue - Split 3:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Matches Per Season'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Toss Decision By Teams'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_winner:nk]</field>
                      <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]</field>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_winner:nk]</field>
                    <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[usr:Calculation_149463268170096646:vtavg:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;bat&quot;</value>
                  <value>&quot;Deccan Chargers&quot;</value>
                  <value>4.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0dweeea0twlvym19lkdr11q2rej7].[none:Toss_decision:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Winnning Percentage of Each Team' />
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{60BCD9F1-A8D8-4461-8D9D-29D2A6ED8547}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BatFirst vs Bowl First' width='123'>
      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
    </thumbnail>
    <thumbnail height='99' name='Does Winning Toss Impact Match Result?' width='192'>
      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
      AcRo/wEIVeuEHJKf6wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='IPL Champions(2008-2018)' width='192'>
      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
      /wcGsphdBEk9iwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='IPL Data Visualization' width='192'>
      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
      IvUSxD1F2rNoDdYIQPaFXGKFyG8PgZJ53SLh5qOilDe+FMszRx/DKQ1TD13KtWGUSml1E+pF
      lyhJmFvsUAw0IxPb6DUbjIyNsrjUYOu2aZ49+jheeYThik+hXKPgB3TbqyTWJe428aRkbGrr
      698IFjgI4ZBmGa7r4RVC4jheT2DPO7ZhbRbIR0eBRfUFwkEK5xo26NWq09qf1SYvjy5AI3Bs
      rlJo4YDun+jknezZmQ47eI7OWUPDrvK1x3eSlDLwJUKA6zgUnBDpBHjSRzguLh4WF4mLtB7g
      Ia2PsB4SiRAeglwA8s8cfE9SqglkxUXqfofuz17GGLQClUGWGZJUk6aW1GqkK/HcG+8t01mK
      C6ysLDG/2KVSFszNLZFMTxG4DqNjo+isR6+5RGNpgcWVFUbGJ+j0NDpL8Kyi2RM0Vi8SRRnV
      Wpn5pQZTYzVWmxGl4fEb3cRvic3xAglQWpOmCVI6eJ5LHL8gHrD+W9v+fpubpFfxlK0166qD
      sH17k/4yqn2ByNWhfLYQMjcmhbFgJcI668askYLmyjK95YyhvWPEpoSxDp6QlIsVPDdACBds
      rr5Y6SCMm3dy44D1kHgI6yLxAAeBi0N+jBQujhUIIZFW4DhePqnZjXJ71koIwJh8FrAWlLa0
      IkWzlfIyS2u9Kjh05G6U1jRXfXSmKVQq+GGVYsFB+mWSTovRyQmEtTiOR6U+hO/7OI7DLbff
      g9KaTqtBOL6dpeVVxmpFipUh6uUCS84SpYJPHKc3upnfFJtiBP/HD3+R/+df/jH0jdgoikhT
      tT7Fi3Xvj9NXl+RVrxKLs75CiZQC0Z8RjCPyKhH9cPra9RwnH8WFkPmM4zsU/IBC4BL4LpWC
      5uCeOreOzRPIJqlqcHYmpBsFLJpprJxCKYlS/Q6Ph0Xi4mPxcPqjvtMf7fPO7iGFhyS/N4nE
      Nblh7lqBtBu9WazJtMml2Fi7bmQbm6tcWWZJrObXP/3tLDXxVxOveyNYWIvVmnaviTU2H1lZ
      S8GVL4oMb8hcPoKv6f4CkXtJsLlxbCRGWDBro79Byly/LhRCwjD/86Rl25BgYipEG8XBfVsY
      2zLJbYf20z77HJfPPccP/89v5uSzbU4+dp62SOhZSaardJMd9LouUnhYfKT1cxUIF4SHYz0c
      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
      s4NSqYRerwff940Xzoa/4zjmhB0PxPB7Fg94+vQpms0mXr16hVKphFarhcPDw9QqILZxJ6l8
      Se/J+SbxdjodKx62/uRnpnHc3d0ZOqnVarEYSGpt0MvLS7iui1qtFqt0lnaQIckI0rs0KWQu
      30lCmKIxiiKjEuTz+QcBJYJ0fWo91XEcjEajWBlD26KkEb/EnynTtpqhbj6PzM9+Ov+jUrHi
      rvvT+Ifh/Myz9OPf3t7i+fPn2NjYQKlUMmoM29D4U6ozl0j3TVVoY2PDVKmTtTbJUSWzSJqj
      NNXR1jclslRP2VcS2NpioHA4HGJlZcU8QweBobE0FYh69+3tLSaTCdbW1pDL5Zbmkvz7iy++
      QBRF2N3dNV6lV69e4fHjx7HUYNd1TY0dqh/kSp7nxc6w0kPCUouO48Sis0mTJNH1fd/ozevr
      67HDFmmFbW3SRW48ukjz+bzVDgLu7RoGlSTo9pPSC9g3Jc7FxQWiKMLBwUFq9qfjzKPCxWLx
      gTeJ0p5Rf87t8fExcrkcZrMZer0eDg4OzIk7MkWONYkeCDRqdWyHGgerg7CoAEtZcn2kGiq9
      R1w3bqB2u21qLcmqHXJsC4vjcke2222cn5/j448/NpXK5GDk4mnu/dlnn6FWq8H3fXQ6HcNh
      eI40m83i9PQU77//Pj777DP88pe/xPHxsdE5Z7MZ3n//fcOxkgwp6oicBJkcpyUDJ/ru7g77
      +/tmciXBLMJL42/bBL7n4De//l/wqrt4tlfFP/3mD9jeWsNtu4d60cfYyePTn38U68cmAaQE
      teFPnK+vr82BHc4J8LAw7e9+9ztUKhXj+WIgjxHu9fV1Mw6ZBcAq1tfX1+a8MuMlVEX1nEsP
      D9edZ8r5LO0WumQZ0c/n82i329jf34/NDSWVdrzkcjn0ej30+33UajVTkVCr8BzbwuK4TDFg
      5WL5sv7MxdGLSHEahiGazaZJ6aXeXigUsLKygmazaUQuB10oFB4UzUrKlWGlBlaGaLfbqNfr
      KJfLRorIdt68eYOjo6NY3MKGV5qBZ4suRtG80FM2m8UscrC/t4/y5iMMb4/x/tMn+OPJGZ7t
      V3DZyaKSi3N/m46sN4MtIk5CoBp0cnKCzc3NWLqGjOAeHR3hzZs3xgsUBIEJrsnD+4wQS4dA
      sVjE9vY2Tk5O0G63jVuRBvje3l4sgCfnqtfr4fb21vx2dHRkNsLl5SWePHliGJfjzA9N8bd+
      v282IDNeWVBAnrceDAbGmcGK4XIuY4wuSQLoZLhsNourqytsbGwAQEzH1AShRb7Mfbm9vUWl
      UjGTSe7w5s0brK2tmcPjnU4Hq6urAO45iBbjmmgoApvNJsIwxPb2tlG1uPmGw6FJ8a3VaqhU
      KrEUYLaTpM4tMsSIP70WlUoF7bs26rUyOr0enn95jPcOd3F61cZGxcMwKuC9RztWok7qM80m
      cZz7FO5Go4FerwfHmWeyMp7A7FYSuk6xIP50Qcojm+zL931cXFyYMx1kctPpFGdnZ8YI58aj
      FrG5uYnNzU2j7larVVPkeHt726RsS+ZpsyF7vR5ev36NZ8+emaAWD8/QZSrL5UsgrlGUkgzX
      7/cxGo1M5+yE0sCWCcjGbTqgNj7lRPMzEWQJc/m7Xmj9N8foeR7Ozs5wcHCAKIrQ6XSM62tz
      c9N4PAA8ENXyexKelmjLECO/k3aMJKrS2/MANPBsuqxNzVmEvwSpC0fR/I4Bej42NzetrlrO
      Ib1MLMWiUxukrs25Go1GRu1kegbngJvo+voalUrFeLRarRZqtRouLy+xuroaO2zE8UlakYzQ
      8zxzp8J4PDYeI2YCUE3XB2loPxKfpc8DAPP8oH6/H5sIfRwujTBsv8nvaVfYxKdN1dLteZ6H
      6+trU69nNpuZbEng/jaaJCONf9t0bVvfGg+Jv8x/kWNnRQSduSqNXW3k2qSObWxyPRiYJNGw
      cvWrV6+M+1MaojyeyRpGq6urhhNrI53fMU2EaRc8qCPx4CYMw3kVOFa8pveOG6ZQKODzzz83
      NkipVEKhUMDV1RX29vbQarVMYG5zc9P0m8vljJpMmyApcY40EkWRkVKpG0ACxTqNJt/3jTdI
      LqL8rHVXfn6ghzn3IWpZcFcPXhOUJBTf9w2np1oDIHZ8MUmXl4Qmx6j71qBxWYS//J8RSVla
      0cYUlsE/TUJQugRBgGw2i0ePHqHdbqPRaBgHA1WhXq9nKvJxHnXlCY2/PhRk+05ybY5H6v0/
      +clPEASBMVhXVlYwHo9xeXmJSqVipDhPufH9jY0NXF5eYjAY4ODgwKhPBK3SUUrc3t5ia2tr
      7klcpAIRfN/H1dWVUYt838fOzs4D70mayqIXhs/L52w1fZIIjP/7vo83b94giiKjhyYFgWx9
      6u8XEZYN13fFH0As5SCtv7TNqdu0MQ75HR0BdCsyRRqAucqKhHpzc4NcLodKpfLAi8K+qGrI
      9G2NA6s60AagTdBoNOC6LnZ2dmInz/TYpXos15W4tNttDAYD7OzsGA8jNwrHRJWN1TR4bmVp
      CcDQO3XV58+fm4HIQUmVSHJdGxEnLdQi3V8uAM8bjEYj7O/vP0i3tvUj3yckZSLq8diek7i5
      kYNxcwAAyFbzQNaexk29mbECTeRJY+bvSW3K321AaQDcl56nvk7nA+9sq1Qq6Ha7segp54CS
      n7EUOY+29ackZn1XenNoq2nfPmlJHr7Rc0EVbzweY3V11Rz6oV3HWAbfabVaJrmOjHvpDUD9
      mYYbG7dZ2VwEuRg2wteZolr3Xcb4c10XnU7HlAXR4tf2vuzPRkw2SCJOTWzBeIbmby4AACs/
      30F2Izk923XnZSEZZfc8z3hckvBPGp98Z1n8ZQ1P+R7XhVW6X7x4gYODg1iJFV33VOMn158p
      CK1Wy1T5dhwHGxsbePHihUmxkLlcjjOPpdA7qFPDaUf0ej1jEK+ursaYsSyOEEWRualIev2W
      MoLlvVrA/UUONi6tF1lXmE7iujapYPOKSB+xTNOmP1sagTbdW3oSbFxT+/VtiV+2ObISppOM
      P2vdcHHpwqPaGUVRzGMlgWO1eTj0M8vgL3EqFArodDqoVCrIZDLY3NxEGIY4OTmJXS+1vr6O
      arWKYrEYuw5KrgmJlH3XajUMh0NT7a1SqeAnP/kJzs7OjER0XRerq6sYjUbodDrY3d3F+fk5
      gPv6THKjl0ol+L6Pvb292DFc25pEUWTUTuPoSLMBmNg1HA7RbrfNbg+CANvb22Y3ab05jXPZ
      1CL5Oy172zN8Tm+ibDaLZrOJTqeDXC5nctxt9onedMvo+YvUtpjBBwfBYG6Au/nMgwL0En/C
      YDB4EIDi91SRkvDX40gKEi6Dv+M4xvcfRZG5bITGI5nMdDrF69evTRu5XA6rq6vGbdpqtWKR
      ZEKj0UC9Xke73X6Q7sJxDIdDdLtd1Ov1WLUMzagkrlJ14th1u/JdwnA4TM8FiqL5TShv3rzB
      7u5uzDsTRQ9Pfmm1Ry+SXgzbcxRbknOkqVFRFM//CMMQjUbDGEQyqJKmPrAtPX7NVa1jCaf4
      zW9+i9XdIzzeWcP/+cNzPD7cxevLFrbqProzH4921h/0R8NPnyKTY2HNID3H8rlFatEy+EdR
      ZNLfpRomNxelL12mMl/q6urKuMjDcF5JYzqdYjqdotvtmjvecrkcnj9/jp2dHbz33nvmyiuO
      jTlfJH69of818I+ieXwo9ZrUu7s7vHz5EtPpFB999NEDtYINpRGnhiRi4m/8m0WckhCS7clF
      4gUbl5eXpuYo/cK2gxR6Ut4FpJ3ieR4GnRvc9l3kwxbaQxevzi/xZKeCq14GZT/CTz/+KMal
      mcEqYw6amTiOEzsgvwh/2wbi5yQjX3NWZkvaDhfJd2QSnzRWXdeNpaHwmCgDf71eD41GA7lc
      Dv1+37g3Hz9+DADmvrikpLpFkngR/npOE20Az/PMBXDAfTqqXHgirydTwiLC0ioGCYqTqcVk
      kmSRSWm6RJ/0TKT1LfHT49cblfruHP8IjasWHj1+jOvLO7x8+QqrqzWcXLRQLubRmd3XU2Iq
      BitY2MYgGYGMiC6Df5K9siz+g8Egdq9CEv5Mj+am4XyEYWhutSedMG2m2+2i2WziyZMnyGQy
      6PV6ODw8xOXlpZE+v/3tb/Hpp5+awJZmsFodZJqN/j0Jf8YQzHdpKhBTBeRCyUmRE5MGSepO
      0mI4jhMrxJX0rm1CstmsUYF0DU/5nh77MpIsCX9pAySB5PppIMchi2Ytg/+iOZbPaXzk59Fo
      ZOIBEr7q+nNzXF1dYXNz06RVB0Fgjnw2Gg0EQYBqtYrpdIq9vT3jXg3D0Egk6eNnSjej0jzK
      mgQy7sJxp2aDcvAa0SSkkyZGT5wmmLT30nRY2zgcxzHFptIqI+tNKSeW3+mcoKR+2ZYND7Yp
      i4XZ8Jd6NnBfdVm2tQh/G4EmbRKtvsq5LpVKxiMlT4ulzbvuVz7DueXdZDs7OyYVgo6W9957
      z3Doi4uLWEYAPUpSPZtOp6hWq7FiDPpOOo1vr9cz56yNx2qRBJB1HxdxmKSYgA2SNgAQv0He
      Jqbl+1pvZnTw9PTUeCyOjo5ih13SOP+ym3FZ/B3HwWAweFC0K40BOM79Hcsyp2gR/ro9nVsk
      8dXA72iY8x/zlZbFX49F98GL/3i9rfTJ05Z49eqVCZDZ1l9WFJdqLz8zpYK6fxiG5nCNnqPU
      OAD1/mVUGCDuo9di1faZlr487qZLECbpdBIJ+SxthsPDQwDA2dnZg3FyYmT7uh3NRb4q/tKm
      0X3bpAELYo3HY+MrT8J/GZDtS73eFoNhVqVMVZebYVn8JW78PBwOTRBsNBrh1atXcBzHFPKV
      QTl5YkyOjyBPsfEdOk14kQaJnep0oVAwLl6+l81mF1+RZNMX5eRSN7NVZuMk01fP31n7kmkM
      NJSIgHa36oWSYOMQNNDIJRjB1mcYbNxe/2+TGBJ03zaDmyVXOCfkevpMLhen3+8DmB/YqVar
      Ridnu8y/cZz7o6E2sb9IZ+dzPL3GREeJ19fB33Ecc2CGtZOiKMLm5iY2NjZwfX2NZrOJtbU1
      gzvzk3ikNAkvGy0wx4gMlWNh7IpqEn9LrQxHDsDcClr1sjSFPiyh9TVJyEncg1yh3W7HEpk0
      xKJ3FtXEtlAM2J2enppDMWlc1EYw/HsZFUC3I4F56jT8RqPRg/Z4VLBYLJpN02q1zLlpJqUx
      h6ff75s5YVU8mZKsCcg2LrodberBV8WfQE5MzssN9vr1a+Ng4XFIMtIwDHFwcIBWqxVjWCR8
      MsxcLmdoLQxDFAoFk2qtPZO0HbgJJU6JNgBdcPKWvm8KwjDE7e2tyZHnAJNAc4AkDgjARImL
      xaIxftK4Jb9LW2z5GxdtMBiY44e297gh5VlqrccCMOkA5OwkAnJo5uEAQLPZNOKdacSDwSCm
      YslK07YNPhqNYsS/CH/N0OTcy/blfDC9Op/PIwgCnJ2d4ejoyLTJnCKqPSw1T+KlCsn6RcBc
      VWQWaiaTMS7WUqmElZUVo1Fw/vQVtQDSVSDHuS809U0SP3BvrNluS+RYFkmSpGfCcF7rkgcr
      9CGPJIKV7RJk+/yeBzV4znV9fT0xtZdEbAvK0Vjm4XN6sbhwJGIZIeeRUWAuAUj8ssoGPR+2
      Qrmy3WXxl0SUZEdxk0omFAQBLi4ucH19jadPnxqGQK2BhC0v0eb4ZP5Pu902EpIQhqHJpxqP
      x1hfXzfeS54rt0k113WXzwb9JiGTyZhLKMbjMYbDIYDki9mSwCYZuJGlR4tRSU5SUtQZSJZE
      tFtmsxlKpRLW19dNdFN6HOSmof6v81T0xmXezSKQ79nuRWBQajqdxor8SuJkIYFlIu8E2jD0
      xugTfLPZ7EF5dx6++eSTT8zchWGIm5sbVKvV+8js25NlVI2IB0u1ZLNZtNttU02b72QyGays
      rJiarhyfLphGoGr/ndgAwD2x6uxJ/ZkTKolIE738PQgC3N7eotvtYnt7O+ZHBubE1mq1TFZj
      Wu1JTbhBEGBtbQ3AfWHdUqmEbrdrLY6VZsRrLuo4jjkbrefC9reeIwl0QLAfumX5HdUuSh7X
      dWM2C3N+SLS8l4C2DKPbVDu0xkDjVHt6giDA1dWVqd5WrVYN8buui2q1ilarBeC+IBhtqNvb
      WxwdHZlz4JeXl8ZtLGsA2QJjpLPT09PvzgYgkJCkO1T616WbjhMrUyaAOYe/ubnB7e0tfN/H
      /v4+ms2mCa7QkORCraysYDQaGU5JXb1er6f60nn4mwZcPp83haNIQNpzofPaZdvkxo7jmPo2
      7C8JkpwAtnnlXMrD7KZIrOPEyrtTCjM5zXXnN1OSCNknN4F2iMhxM8GOpVQ8zzMVIOr1Ohxn
      XvKRuj+JmZeeSA8VVaZqtWrm8uLiAv1+35xjHgwGZl40E+K60cZNNILTxOI3CVE0j9jZriKl
      V+rVq1dot9um/IUstEVOzYk9PT1FGIY4PDw0IXiZ2vHAK/B24qiP2+wKKXWGw6EpR8iyiKxQ
      x/Ij8qyzzHSV7bI9+uLpndGp4csY5hJk+5wb3lHsOPcpJxo/2ki65LzecNIWsI2JqiclLNUh
      XtrHqtRyDrrdrtkMGndGyMvlMu7u7tBsNpHJZLC/v29uqM9kMshmsxiNRqYdesaI09nZGXZ3
      d797EgCAOXAviVKmx7qui1/84hcA7H56udjvv/+++Z7ELwldc3guArMaWZbP5v0AYFKDadTJ
      z5lMxnhoeAheqwea/1CayAK7mhDYv/ZG6TZtNhENdOJEgpJFb4k/kBzdt3mB5N9UlUajkSlX
      SbXT933jseI5ZDl2eQZC902J8/nnn5sbMGk/UB2SGgKzTxlwo2Tm89+5DUBi5+RxkanH5/N5
      I2ptB14kcdvUljQ1QT6by+WMqmDjcDauLEuqj0ajmJ4NIDURTo9LbwwbQUh3ZxRFmAUBsm/P
      RfCgEnCvNvJ9nsuly1EWi100Lo2/3gB0O/Iwj+Tkcsw8vFQoFNDr9YwzQbo69TyMx2NUq1Vz
      FayOXVCt5dhY+vHy8hI3NzembM50OsXW1tacSVmx+5aBOiEXjpULePCZhlISkWh3HcG2yEmb
      QhquNmNbt8lAD9ULHa63bZhFKs0ikM+EUQSIpqjfZ7PZWB4UA4+yDWZk2i7rfpdxRdH9HWRc
      P40/DevZbIaDgwPjppT1/3U/3FCsXVooFIwtx7ucB4MByuWyOeQv2yiVStjb2zPt0ZUahinl
      0b9toCQA7isUS1emBCnS5XeaQ+lFTSI+vsfFGg6HMbcm7RGqOnxHGrladdAqg+zjXeZE4y3/
      nwUBMq5ndHtZqc2Gv2yTfnQGrJJUG+3FYeSVLkc5T/p9OQa6RRnkotqr5xlArPan7Srci4sL
      bG9vo9lsmktB9JrLyhIyWr68k/1bBEoEGuX6fMIiAzFJn5T2gmxXTi6jx/SKSHWH4XWbUb2s
      sSrHIPtPkjbyOdmX57rIC2OWEVJ6t2wbTvZFrp3Utwbm7NBHz/44niT86c589OgRXrx4YZ4l
      getIPTcXg2krKyvmwgvWG63VauZOM74jx6GrQ8ijnN+LDUCQtR/SwK4rAAAKS0lEQVQ1hyIk
      cdZFi6q5qfy+VCohn8+bK4iAeH0dxgdsbSZJHdsYiRPP1uqKbPpdPVbXidfOZJkVbpplII2R
      yDEw/4YXk+g2JP76exrEs9nMZIkCc2YjJTw3BHGhpHddF8fHxwDml4OwdLp0n3MO9Ljk3QfA
      92wDOM7c167LX+gJ5z+ZzktI47BpOq/jzKOtzFuhzi+f0Z+5EJPJBH/84x+t3Ff3OZvNcHV1
      BceZZ1LKiLAN5zT8o+i+cptUQdK4vN5YSc/5vh9jCEm6u23zM817a2sL19fXD57lZzoVZCoE
      PTmNRgODweCBLajbaLfbsbHJYr/AgvMA30VwnPtaMMPh0Hp3GStEyDqRnBCpmy+jRum/i8Ui
      +v3+wqONSUC1gUGu9fV1s0kY9SSUSiWzydrttjkiWa/Xl+qLG0AeatEHbDT+vu+j2+2a8jJp
      NhOT24bDIUajkbl4bplxUY3jeQe+JzNl2afO+9nY2EC1WsXLly+xvb1tJARTUZi5PBqNzEUe
      MgYgaeB7JQEInJRqtYpKpWKCLIVCwVwfKnN9CCQCOblJYpq/6/ej6D4V18ZJbVJEftdut01l
      4ru7O3NjzpdffmkqNhOurq6M357nZVutFtrt9oP2bYSnDUZtGNreo70lsyc1/nIeSXjyAIoN
      HMeBG07gDq7gDq4QBROsrq4afZ5AFzKruOXz+dj1s1SfCoUCPvzwQ9TrdRM939nZwe3trVFJ
      h8Mhdnd3TQCUOPBsBvA93QAEboRisYharWbSb1l+XNoDmpNpok86zqdVB+m90OI2Sa/XsLq6
      imq1anJfOp0OVlZWUK1WTSl3LaVo8IVhGKseZ+uHGZRp9kYS/rQ7bPX59Ttsl4dLeJBH42/G
      0fgtMn/3t8j83d/Cab4w7+oxMYWb46Lqy+g1z/UyRZr2mD5pJytLGJXnbZyAlUO+dyoQgUhw
      UuhbZoCHz/B/TQD65JKtff3edDo1l1Sn2RFygy3rVeGYZP9sr9frod1uY29vD+12+0HgKowi
      uMKAjqLIGKgajzSVz3HmZ5FZFkWmdUtVhO90Oh2Tss24BzNENf46mBghgue6MY+NbR7kBvR9
      H/l83qSWMPeK7nGqbfQ05fN54xqV+FKt/F5vAIa5qYfayncT9KLLhedneQ5VG5vyWTl5aaDt
      DQ2yj0qlYi7qZkU+/dx4PEa73TZXTLHdaTAvL5L35xmuTGzju8viz9TuWq1mOKtUyaTaIAmJ
      gSfeHcHUBom/YQirTxH+h/8yb6O0Y1Qom12iHRh8ZjKZoFgsxso20tCnasRnOB69+WNzEyWw
      p28rGW5ZiKJ40pzNC8G/9QTIiSa3qNVqJiSv25GLI09QpXF2LV1YYoSqiVRTmP/f6/VQqVRi
      gSEGs3hZNNNATHAwCjGZzRDOZojCKPFQURr+9JMn5c47jmPql2pizefzmAUBPHd+Jy+lj+kv
      nOGycY2V9U0Ucx6adz1USzkMJiGymMHxiyjm55JFnuKSKhiL4tILJ482jsdjcw+a53no9/s4
      Pz/Hzs4OGo0G9vb2UC6XY3Qiz0Z8byWA4zgmCCWNXRt3k7/p72VJchmE0bqv4zgmXZouUJ1A
      lrTZqLcyT0j2zc/ZbBYrKyuxtqhK0Fti29yu4yKf9TEKQuSKuXfGn+qjVFts+DP1gGpVv9+f
      ++2nE0xm0/k43uZP8bbJfD6PCED79hITrwh3cI3GTRuB6yDjREDoIpMv4JN/87HpM4oik6bA
      GIDruqZatfa+0eNH8H0fuVwO3W4X5XLZ5DoRZCr8eDz+/m4AAGZiJOe2Gbs2j4fxArj3N5PL
      CKFugwtOF6RWCTTHt3lcZJvMmbGKZcvzciwSknT8pLmQ7cuNLUsZJkk/OT8s2NsfD804qLYw
      TjOXlnlkchUcbFRx8rIhJvb+gzSGafACMMXEtLEsQTM/nlvY2ZmrWPJ4pWZuQRB8f1UgCfSr
      yzpGQHo6gpzQTCZjOAVTHDRI9QS495aQUy9jE7B9Go3yQDs5Me0MckCZwi3TfmXRAqpXctOl
      4S9/Y/tra2vGBanzrbRNIjfbaDLGNJghl/WR9eI3T85Twj3MZiE8N0IQRuj2hqgUfQwnETKY
      wvGLWKlVjC8/ySmRBKw+zffH4zE6nY6pTm0DqcZ+ryUAQUoC2+UdQLKvHIiLURvxkyi73a7J
      /5HVk6kfSwNZEyM3Czknjx/Kaz25uSRXI9FTV+cYmZqhmZRN2tnGJDcAS6z4vm/F3wZsz8/M
      cfacOEPh6TENq6vzeVgVEigplWQZkGcZTk9PzS0xWg20SQDgB7IBgHuboNPpxKoNgPq2xbUG
      wGQ/UlwmAReTqgIQ148Ze5DAfBngvm4P32X1BqpSsiiVBLlo8mwvJQ+rKstn9WcN7IebkPjL
      SxE1SJVJf5/L3kdqebfYuxQz+DrAeby4uDDXqk4mE3OhO0HOo2QwP5gNAMAclet2u3N3JiKM
      J6xt6iLjefAz95WBqVZwseTVrxKYJizVFSDuyrSJ736/b4hM33/F/jgOTViaW9tsCbptGe19
      4Gu3cDxyeLp7mT6cBjbvEUEa9mEYPohm/ymAZ0ZWV1extraG0WhkEgptJX2kZPpBbQBgLn6r
      1Sq63S4AwHU9jKdjuI5rpAC5hl4splPIiCbVFpkObTM0bRy3VCqZ4k2257UBrFUXSfQ2oqIL
      V/afZATzmSiK3z22jL2QZmjL6CuAmNH5pwLHcbC3t2cO1dAmIzPTcyQZ1w9uAwDzHV6tVjEc
      Duf5MLmCqYaQz+dj1dIkSFVE5tyTaOiX57OLvEBRFJnJ5/eUIPo4o3yG39va53Pk+Novz2f1
      ASFeV8RTX1o35v9JxGuTArbxaaL7poFzWSgUTECM+Pu+b65bokNBJt85zvc4ErwI6A4rFAqm
      7k3atT8E/Xu73TZnVW31M20uSpu6oonL5pJNGkeSegTcuwr1mGxGsJZESTZDGgdPUofkRpK3
      Q/6pwHEcc7RSqrCstEdJ3ul0YifefrAbALjnUmnRUQ085sd3qafb0p+TuH7aeOS7BFvui3xu
      PJmYw+6aA9MA17UvbcaqjTPbnntXkO8wYPVtACU7y9FI+4xjorsUeCs9vpWRfkeBnpDRaGQm
      Udfxkc9KtQGIc0MJmpvrf7a25b8gChFGD2uZRlFk4gpJfRhdV1Rmk8+kbVr5m3YM2PRp6cv/
      U4LEly7YpLLxrFbNMf64ARQMBgNT7q/T6VirCtsWnyA3QZqBTFhEgI7jwM9kMZlNH7THmAe9
      MLZNJd9Z5J1ZhEsa/r7v/0ndn0ngOI6JRHPt9CaQF5b8oFWgd4Uomge8WG3OdlEzIcnDoo3P
      tHfSxkHCjqJ52nA+m3vQbjabjUWkbWMaDoexRDdbOXQ+q/tPs1Pk5mA+1bdN/ASqvSyhEkVR
      7KovnibM5/M/bgAJ9PzI6KLNyLUZuPw+qRyKBq0uRdH81Fe32zUnsnRRW03kPJ8sq52xLSkN
      6AVhsE5XXtPtJn0nDU2qG9lsNtGr9m0CnSByE8srkojP/wNSKnenv/AQjwAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='IPL Matches by Venue Per Year' width='192'>
      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
      d2PwVsT1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Matches By Venue Per Season' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Matches Per Season' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Matches Won By Teams Each Season' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Toss Decision By Teams' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Winnning Percentage of Each Team' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
